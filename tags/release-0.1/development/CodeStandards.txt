Formatting and Naming

	CamelCase, with lower case first letters for everything but class names.

	Constants should be capital letters.

	Indentation should be handled with tabs, not spaces.

	Functions and methods that return a value should begin with 'get', those that set one 'set', and those that return booleans should begin with 'is'.

	Variable names should describe the variable with enough detail that their purpose is clear.

	The only one character variables should be counters, such as those encountered in for loops.

Commenting

	Full DocBlock commenting for all files, classes, properties and functions.

	All functions should have, at a minimum, all parameters and return values documented.

	Any caching that is done inside a function should be described in the comments using the non-standard @cache docblock parameter.

	Any plugins or hooks should be described in the docblock with the non standard @hook parameter.

Error Handling

	All code should run in strict mode (E_STRICT) without throwing notices or other php errors.

	Proper exception handling and graceful error handling should be taken care of at all times.

Data Handling

	Save all time data in GMT (hint: gmdate()).

	Current display timezone should be managed with date_default_timezone_set() and date_default_timezone_get()

	All strings should be saved in unicode using the utf8 encoding. This is backwards compatible with ascii and allows for international characters.

	$_SERVER['php_self'] is not your friend (xss vulnerability).

	User input is never to be trusted.

	Always know what you are outputting and where it came from.

Database

	User input is never to be trusted.

	Use parameterized sql and never directly place data in your sql strings.

	If you do insert data directly into an sql string, put a comment directly above it stating why it was needed, where it came from, and what was done to keep it safe.

Testing

	Testing should be performed with caching enabled and disabled

	Code should always be retested on a fresh installation.